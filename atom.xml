<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.elex.vip</id>
    <title>Elex&apos;Blog</title>
    <updated>2022-03-22T11:32:13.909Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.elex.vip"/>
    <link rel="self" href="https://blog.elex.vip/atom.xml"/>
    <subtitle>To be or not to be, that&apos;s a question.</subtitle>
    <logo>https://blog.elex.vip/images/avatar.png</logo>
    <icon>https://blog.elex.vip/favicon.ico</icon>
    <rights>All rights reserved 2022, Elex&apos;Blog</rights>
    <entry>
        <title type="html"><![CDATA[docker 安装Jenkins自动部署SpringBoot项目及所遇到的问题集合]]></title>
        <id>https://blog.elex.vip/post/docker-an-zhuang-jenkins-zi-dong-bu-shu-springboot-xiang-mu-ji-suo-yu-dao-de-wen-ti-ji-he/</id>
        <link href="https://blog.elex.vip/post/docker-an-zhuang-jenkins-zi-dong-bu-shu-springboot-xiang-mu-ji-suo-yu-dao-de-wen-ti-ji-he/">
        </link>
        <updated>2022-03-22T07:50:05.000Z</updated>
        <content type="html"><![CDATA[<h1 id="docker安装jenkins场景">docker安装Jenkins场景：</h1>
<font color=#999AAA >
安装了以下服务
<ul>
<li>jdk1.8（非docker容器安装）</li>
<li>maven3.6.3 （非docker容器安装）</li>
<li>docker</li>
<li>nginx（docker容器部署）</li>
<li>mysql（docker容器部署）</li>
<li>redis（docker容器部署）<br>
</font></li>
</ul>
<h1 id="开始安装jenkins">开始安装Jenkins：</h1>
<ol>
<li>启动docker，通过docker下载Jenkins镜像文件</li>
</ol>
<pre><code class="language-bash">docker pull jenkins/jenkins:latest
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/img_convert/eb72e0c4b28ac6f1daff510d61234e8a.png#pic_center" alt="在这里插入图片描述" loading="lazy"></figure>
<ol start="2">
<li>创建Jenkins挂载目录并授权权限（我们在服务器上先创建一个jenkins工作目录 /var/jenkins_mount，赋予相应权限，稍后我们将jenkins容器目录挂载到这个目录上，这样我们就可以很方便地对容器内的配置文件进行修改。 如果我们不这样做，那么如果需要修改容器配置文件，将会有点麻烦，因为虽然我们可以使用docker exec -it --user root 容器id /bin/bash 命令进入容器目录，但是连简单的 vi命令都不能使用）</li>
</ol>
<pre><code class="language-bash">mkdir -p /var/jenkins_mount
</code></pre>
<pre><code class="language-bash">chmod 777 /var/jenkins_mount
</code></pre>
<ol start="3">
<li>创建并启动Jenkins容器<br>
-d   后台运行镜像<br>
-p   8081:8081  将镜像的8081端口映射到服务器的8081端口（后面服务部署用到的端口。docker容器部署，需要把部署项目的端口映射出来）<br>
-p   10240:8080  将镜像的8080端口映射到服务器的10240端口<br>
-p   10241:50000  将镜像的50000端口映射到服务器的10241端口<br>
-v   /var/jenkins_mount:/var/jenkins_mount  /var/jenkins_home目录为容器jenkins工作目录，我们将硬盘上的一个目录挂载到这个位置，方便后续更新镜像后继续使用原来的工作目录。这里我们设置的就是上面我们创建的 /var/jenkins_mount目录<br>
-v   /etc/localtime:/etc/localtime 让容器使用和服务器同样的时间设置<br>
-v   /usr/java/default:/opt/java/openjdk  让容器可以使用服务器的jdk<br>
-v   /usr/local/apache-maven-3.6.3:/usr/local/maven   让容器可以使用服务器的Maven<br>
-v   /home/shiyue-ticket/logs/:/home/shiyue-ticket/logs/   将项目的日志目录挂载道到本地硬盘<br>
-v   root   给容器root的权限<br>
--name   jenkins   给容器起一个别名</li>
</ol>
<pre><code class="language-bash">docker run -d -p 8081:8081 -p 10240:8080 -p 10241:50000 -v /var/jenkins_mount:/var/jenkins_home -v /etc/localtime:/etc/localtime -v /usr/java/default:/opt/java/openjdk -v /usr/local/apache-maven-3.6.3:/usr/local/maven -v /home/shiyue-ticket/logs/:/home/shiyue-ticket/logs/  --name jenkins -u root jenkins/jenkins
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/be99f1939edc478c8b4e114560dfec1e.png#pic_center" alt="在这里插入图片描述" loading="lazy"></figure>
<ol start="4">
<li>查看jenkins是否启动成功，如下图出现端口号，就为启动成功了</li>
</ol>
<pre><code class="language-bash">docker ps -l
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/1ffa6654ee3d4718b32fcba4ee77a4b7.png#pic_center" alt="在这里插入图片描述" loading="lazy"></figure>
<ol start="5">
<li>查看docker容器日志</li>
</ol>
<pre><code class="language-bash">docker logs jenkins
</code></pre>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/cfa88a461d0c4b748162226595efe038.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAUG9vciBXcmV0Y2jCsA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" loading="lazy"></figure>
<ol start="6">
<li>配置镜像加速，进入<code>/var/jenkins_mount/</code>目录</li>
</ol>
<pre><code class="language-bash">cd /var/jenkins_mount/
</code></pre>
<p><img src="https://img-blog.csdnimg.cn/b910aa7ec31e43dbb572eea540b7307d.png#pic_center" alt="在这里插入图片描述" loading="lazy"><br>
**修改<code>hudson.model.UpdateCenter.xml</code>里的内容</p>
<p>修改前**<br>
<img src="https://img-blog.csdnimg.cn/31d250a7af9f4b22bf7809510fe7cd27.png#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
<p>将 url 修改为 清华大学官方镜像：https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</p>
<p><strong>修改后</strong><br>
<img src="https://img-blog.csdnimg.cn/9615a28a5a964fa8a5f80473dea1cce0.png#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
<ol start="7">
<li>
<p>访问Jenkins页面，输入你的ip加上10240<br>
入门<br>
<img src="https://img-blog.csdnimg.cn/img_convert/b85730023a205562da6f17c70a4a5a06.png#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
</li>
<li>
<p>管理员密码获取方法，查看<code>initialAdminPassword</code>文件，把密码输入登录中的密码即可，开始使用。</p>
</li>
</ol>
<pre><code class="language-bash">cat /var/jenkins_mount/secrets/initialAdminPassword
</code></pre>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/5adfc6c811164fc6987c8656838b0f8b.png" alt="在这里插入图片描述" loading="lazy"></figure>
<ol start="9">
<li>到此就全部安装完成了</li>
</ol>
<h1 id="安装gitgitlab插件">安装Git，GitLab插件：</h1>
<p>后期更新</p>
<h1 id="问题">问题：</h1>
<p>后期更新</p>
]]></content>
    </entry>
</feed>